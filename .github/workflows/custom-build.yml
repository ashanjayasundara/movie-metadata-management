# This is a basic workflow to help you get started with Actions

name: Dev Ops Custom Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_app:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Slack Notify Build Start
        if: always()
        uses: Danushka96/sns-action@v2
        with:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TOPIC_ARN: ${{ secrets.TOPIC_ARN }}
          MESSAGE: DevOps REST API Release started
          SUCCESS: true
          
      # install applicaion dependencies
      - name: Install Node dependencies
        run: |
          npm install
          npm install typescript -g
          npm install typeorm -g

      # build and test the apps     
      - name: build Node Application
        run: |
          npm run build
      
      - name: Slack Notify Build Success
        if: success()
        uses: Danushka96/sns-action@v2
        with:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TOPIC_ARN: ${{ secrets.TOPIC_ARN }}
          MESSAGE: DevOps REST API Release successfully completed 
          SUCCESS: true
          
      - name: Slack Notify Build Failure
        if: failure()
        uses: Danushka96/sns-action@v2
        with:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TOPIC_ARN: ${{ secrets.TOPIC_ARN }}
          MESSAGE: DevOps REST API Release build failed
          SUCCESS: true
   
  push_to_Docker_Hub:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      # build docker image and push to docker hub
      # only if the app build and test successfully
      needs: [build_app]

      steps:
        - name: checkout repo
          uses: actions/checkout@v2

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v1
      
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1

        - name: Slack Notify Docker Build Start
          if: always()
          uses: Danushka96/sns-action@v2
          with:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            TOPIC_ARN: ${{ secrets.TOPIC_ARN }}
            MESSAGE: DevOps REST API Docker Build started
            SUCCESS: true
          
        - name: Login to DockerHub
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKER_USER }}
            password: ${{ secrets.DOCKER_PASSWORD }}
      
        - name: Build and push
          uses: docker/build-push-action@v2
          with:
            context: ./
            file: ./Dockerfile
            push: true
            tags: ${{ secrets.DOCKER_USER }}/devops-rest-api:latest
          
        - name: Run the image in a container
          uses: addnab/docker-run-action@v3
          with:
            image: ${{ secrets.DOCKER_USER }}/devops-rest-api:latest
            run: |
              echo "runing the docker image"
              echo "Testing the devops-rest-api endpoints"
              echo ${{ steps.docker_build.outputs.digest }}
        
        - name: Slack Notify Docker Build Success
          if: success()
          uses: Danushka96/sns-action@v2
          with:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            TOPIC_ARN: ${{ secrets.TOPIC_ARN }}
            MESSAGE: DevOps REST API Docker Image successfully pushed to DockerHub
            SUCCESS: true
          
        - name: Slack Notify Docker Build Failure
          if: failure()
          uses: Danushka96/sns-action@v2
          with:
            AWS_REGION: ${{ secrets.AWS_REGION }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            TOPIC_ARN: ${{ secrets.TOPIC_ARN }}
            MESSAGE: DevOps REST API Docker Image failed
            SUCCESS: true
   
